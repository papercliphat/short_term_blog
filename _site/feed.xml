<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mike Porter</title>
    <description></description>
    <link>https://www.mikepotato.com/</link>
    <atom:link href="https://www.mikepotato.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 11 May 2016 00:10:54 -0700</pubDate>
    <lastBuildDate>Wed, 11 May 2016 00:10:54 -0700</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>How to Create a Jekyll Blog</title>
        <description>
</description>
        <pubDate>Wed, 11 May 2016 00:00:00 -0700</pubDate>
        <link>https://www.mikepotato.com/2016/05/11/how-to-create-a-jekyll-blog/</link>
        <guid isPermaLink="true">https://www.mikepotato.com/2016/05/11/how-to-create-a-jekyll-blog/</guid>
        
        <category>Jekyll</category>
        
        <category>JobPrep</category>
        
        <category>StaticApp</category>
        
        
        <category>Blog</category>
        
      </item>
    
      <item>
        <title>Benefits of Jekyll in Static Apps</title>
        <description>
&lt;p&gt;Jekyll is a static site generator. That means you can use it for blogs, business websites and anything else you can imagine that mostly doesn’t require a database. It takes dynamic content like templates and markdown and assembles that content into a static application. That assembled static application is what gets put on the web. Using this method we can take advantage of paradigms in programming to avoid repeating our code in several places and update it easily.&lt;/p&gt;

&lt;p&gt;Jekyll is pitched and touted as being very minimalistic and very efficient. It has only what you need to generate a basic static site. Everything else you have add. The benefits to this approach are that Jekyll is very fast, very secure and very cheap.&lt;/p&gt;

&lt;p&gt;Now, I said anything that mostly doesn’t require a database - because we can use plugins! When we picture dynamic content like comments, that might be essential to a blog, we often picture a database of some sort to store those comments in. While Jekyll is praised as having nothing you don’t need, it might not have everything you desire. So&lt;/p&gt;

&lt;p&gt;, before it is put on the web. What’s put on the web is&lt;/p&gt;

&lt;p&gt;, r is specialized for what it does.&lt;/p&gt;

&lt;p&gt;I chose Jekyll because speed, security and price were very important to me. These aren’t the only important factors when writing a blog though, and Jekyll competes with WordPress, which is much more popular.&lt;/p&gt;

&lt;p&gt;Jekyll is written in Ruby and I have some Ruby experience, so that also&lt;/p&gt;

&lt;p&gt;the right resource for me to host a static application.&lt;/p&gt;

&lt;p&gt;Jekyll was written in Ruby; I have some Ruby experience. Jekyll is very fast, secure and&lt;/p&gt;

&lt;p&gt;y&lt;/p&gt;

&lt;p&gt;Pros&lt;/p&gt;

&lt;p&gt;Benefits of Jekyll&lt;/p&gt;

&lt;p&gt;Speed&lt;/p&gt;

&lt;p&gt;Static Pages&lt;/p&gt;

&lt;p&gt;Cheap&lt;/p&gt;

&lt;p&gt;Relatively Easy to Use
Pretty Secure&lt;/p&gt;

&lt;p&gt;Cons
Seo optimization
http://philipm.at/2011/jekyll_vs_hyde.html&lt;/p&gt;

&lt;p&gt;wordpress
My blog loading slowly.
My blog crashing during peak periods.
My blog becoming infected with malware.&lt;/p&gt;

&lt;p&gt;Optimizing a Jekyll blog, on the other hand, is easy, since you can:&lt;/p&gt;

&lt;p&gt;Host your entire blog on a server running nginx.
Minify your HTML and CSS without using a server-side plugin.
Avoid over-complicated caching plugins altogether.
Regularly run all of your images through ImageOptim (which I’ve found a lot better than using the SmushIt! plugin).
Have much more direct control over the design of your blog. (WordPress has good support for theming, but Jekyll is less fiddly to get started with.)&lt;/p&gt;

&lt;p&gt;Writing new content&lt;/p&gt;

&lt;p&gt;The second downside with running a site generated by Jekyll is that I’d be forced to write new content from home or anyway from a computer with both a copy of the code and the ‘tools’ required to rebuild and publish the updated site. With WordPress, I can write new content from anywhere. It’s nice to be able to fire up a browser in a cafe, or wherever, and edit new content when you have some good ideas.&lt;/p&gt;

&lt;p&gt;I have also changed my mind about the editor; at the time, for some reason I didn’t like much to write posts with WordPress’ built in editor; but with Jekyll, I eventually got tired of how I had to manually manage images, copy metadata from an existing post to a new post, then change that metadata, write the post, rebuild the site. It was a lot of work, really. With WordPress, the editing experience is so easy and I actually like the editor now while I am writing this post. And you can even use some apps to write content if you are not happy with the built in editor.&lt;/p&gt;

&lt;p&gt;SEO&lt;/p&gt;

&lt;p&gt;Another thing that with Jekyll you need to take care of entirely on your own is search engine optimisation, while WordPress and many themes available for it are well designed from a SEO point of view already out of the box -but still, there are also valid plugins that can help further improve the SEO performance of the site.&lt;/p&gt;

&lt;p&gt;Ecosystem&lt;/p&gt;

&lt;p&gt;WordPress’ ecosystem of themes and plugins is amazing, you really can find anything you need (although themes and plugins are often source of security concerns…as well). The same isn’t true for Jekyll. In most cases you don’t need to write any code, thanks to plugins but also thanks to many themes that automate a lot of stuff with great flexibility.&lt;/p&gt;

&lt;p&gt;Genesis and other frameworks&lt;/p&gt;

&lt;p&gt;For this site I am using the Genesis framework, and I have also used Thesis in the past. These premium themes are amazing and allow for quick customisation and changes to layouts and more, without having to write any code. With Jekyll, making changes to the layout or things like that mean making changes to the code and rebuilding the site, then deploying again.&lt;/p&gt;

&lt;p&gt;Other considerations&lt;/p&gt;

&lt;p&gt;With Jekyll I had a super fast, completely static website; it’s hard to beat that. However there are valid caching plugins which, if well configured, can help speed up WordPress quite a bit, so at the end of the day it is not a so big deal as it may appear. Security is another aspect that can be a well known problem with WordPress; however with some good sense and useful plugins and services (both free and paid), it is at least possible to harden WordPress against common attacks. Having said that, I have to admit that I would sleep better at night with a static site generated by Jekyll than with a PHP based CMS like WordPress. But hey, you can’t have everything -I hope I won’t be regretting these words :)&lt;/p&gt;

&lt;p&gt;At the end of the day, Jekyll is still a young project and I will surely keep an eye on it, but for now I am happy to be back on WordPress. Content is the most important thing, and whatever makes writing content easier gets my vote; at the moment, it is WordPress.&lt;/p&gt;
</description>
        <pubDate>Tue, 10 May 2016 00:00:00 -0700</pubDate>
        <link>https://www.mikepotato.com/2016/05/10/why-use-jekyll-to-create-a-blog/</link>
        <guid isPermaLink="true">https://www.mikepotato.com/2016/05/10/why-use-jekyll-to-create-a-blog/</guid>
        
        <category>Jekyll</category>
        
        <category>JobPrep</category>
        
        
        <category>Blog</category>
        
      </item>
    
      <item>
        <title>Why Create a Jekyll Blog</title>
        <description>
&lt;hr /&gt;

&lt;p&gt;When I first started developing I didn&#39;t see the point in a blog. I pictured tumblr blogs full of food and selfies. That&#39;s not a fair assessment of blogs, and was particularly unfair to technical blogs. As I started learning and googling problems/techniques I found I often ran into blogs for potential solutions and thought pieces on problems. They weren&#39;t a direct guide, or all encompassing, but they were almost always a great starting point.&lt;/p&gt;

&lt;p&gt;But I figured these were just some folks with years of experience; a blog is for someone in like their fifth year programming who wants to give back to the community. Why extend the extra effort now? Could I even put out anything decent? I mean I&#39;m still learning. There are already posts on polymorphic associates and guides, why would it be helpful if I wrote one?&lt;/p&gt;

&lt;p&gt;When I started applying for software positions, I started seeing preferences towards individuals with personal websites aka blogs. Now at this point, I&#39;m like ok, I better figure out why this matters. Obviously your employer wants overachievers. They claim to want folks to eat breathe and sleep code. That&#39;s unrealistic… but a good employee is involved in their work. A great employee thinks about their field in their time off.&lt;/p&gt;

&lt;p&gt;Really great people in their fields think about their work all the time. How do I solve this problem is a life ethos. We&#39;re not talking about eating dinner with your partner and planning tomorrows schedule, but rather while shopping for grocieres, doing laundry, walking the dog… We&#39;re always thinking anyway, but if we direct our thought to our work, and improving our work, well.. that&#39;s how people become great in their field.&lt;/p&gt;

&lt;p&gt;That&#39;s really what an employer really wants.&lt;/p&gt;

&lt;p&gt;Futhermore a technical blog demonstrates a certain level of technical competence. If we start early enough a techincal blog can be a measuring stick of skills. A sort of checkbox of abilities… only anyone can read about those abilities and gather a fair assessment of how good they really are.&lt;/p&gt;

&lt;p&gt;I&#39;ve decided to use mine in that way, to both pour in and test my knowledge.&lt;/p&gt;

&lt;p&gt;Now the painfully obvious is clear. The folks starting blogs, aren&#39;t in their nth year programming. They are just like me and you. They took the intiative at some point, and their skills grew with them. Grew to the extent that now we can use their posts and a resource for our own growth.&lt;/p&gt;
</description>
        <pubDate>Mon, 09 May 2016 00:00:00 -0700</pubDate>
        <link>https://www.mikepotato.com/2016/05/09/why-create-a-jekyll-blog/</link>
        <guid isPermaLink="true">https://www.mikepotato.com/2016/05/09/why-create-a-jekyll-blog/</guid>
        
        <category>Jekyll</category>
        
        <category>JobPrep</category>
        
        <category>StaticApp</category>
        
        
        <category>Blog</category>
        
      </item>
    
  </channel>
</rss>
